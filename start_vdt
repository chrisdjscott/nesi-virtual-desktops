#!/bin/bash -e

# Command for starting 'virtual desktop'. A VNC server running inside a container with XFCE with pre-made config/cache.
# Author: Callum
# https://github.com/nesi/nesi-virtual-desktops


# TODO: Add filesystem shortcuts to desktop.

module purge > /dev/null  2>&1
module load Python Singularity/3.5.2 -q 
module unload XALT/NeSI -q

help() {
cat << EndOfHelp
[1m$CWD[0m

[1mSYNOPSIS[0m
        $CWD [-h -c -v] [ template ] < display-port >

[1mDESCRIPTION[0m
        Starts a VGL enabled virtual desktop.

[1mPARAMETERS[0m

    -h --help               This is help.

    -c --clean              Overwrite User desktop settings.

    -C --nohome             Don't mount home directory. Good for debugging.

    -v --verbose

EndOfHelp
}

parse_input() {
    if [[ $# -lt 1 ]];then
        if [[ $1 == "-h"  ]] || [[ $1 == "--help" ]];then
            help "$0"
            exit 0
        fi
        echo "Not enough arguments, -h for help."  >&2
        help "$0"
        exit 1
    fi     
    # Parse flags + port
    while [[ $# -gt 1 ]];do
        case $1 in
            -v|--verbose)
                export VERBOSE="true"
                export V="-v"
                #set -x
                shift
            ;;
            -c|--clean)
                clean="true"
                shift
            ;;
            -C|--nohome)
                nohome="-C"
                shift
            ;;
            -h|--help)
                help "$0"
                shift
            ;;
            *)
                echo $@
                echo "Unknown option '${1}', -h for help."  >&2
                help "$0"
                exit 1
            ;;
        esac
    done

    desktop="eng"
    display_port="$1"
}

set_env(){

    root="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"    # Location of this script 
    instance_name="${display_port}"

    vecho "This script is in $root"
    
    # If clean flag exists remove cache.
    if [[ $clean ]];then
        vecho "Clearing cache"
        rm -rf ${V} "$HOME"/.cache "$HOME"/.xfce4 "$HOME"/.config "$HOME"/.fontconfig "$HOME"/.gnupg  "$HOME"/.ICEauthority "$HOME"/.xfce4 "$HOME"/.singularity 
        rm -rf /tmp/.ICE-unix/* > /dev/null  2>&1 || true
    fi
    
    # Set   
    # groups $USER | tr ' ' '\n' | tail -n +3 | grep -v -- - | grep -v $USER
    # Copy template for desktop, if not exist.
    #if [[ ! -d "$xdg_home/$desktop" ]]; then
    #echo "ls -d "$root/$desktop/*/" "$root/default/*/""

    # Black sceen bug. Still dont understand.
    # mkdir -p "$HOME"/.cache && chmod -R 0700 "$HOME"/.cache
    # mkdir -p "$HOME"/.config && chmod -R 0700 "$HOME"/.config

    mkdir -p "/opt/nesi/vdt/logs/$USER"

    # Environment Variables

    # Possibly redundant.
    #export SINGULARITYENV_XDG_CONFIG_HOME="$HOME/.config"
    #export SINGULARITYENV_XDG_CACHE_HOME="$HOME/.cache"

    # Bindpaths
    # DONT ADD EXISTING BINDPATH. XALT IS UNWELCOME #$xdg_home:$HOME, /run,/etc,/tmp,/nesi/tmp,/run,
    export SINGULARITY_BINDPATH="/run,/etc/machine-id,/opt/nesi,/scale_wlg_persistent/filesets/project,/scale_wlg_nobackup/filesets/nobackup"
    
    # If environment setup for desktop flavor.
    if [[ -f "${root}/${desktop}/env.sh" ]];then
        source "${root}/${desktop}/env.sh"
    fi
}

create_vnc(){    
    #Randomy generate port number. Add lockfiles later.
    # Set instance name
    # If given persist name. Won't be killed on exit.
    vecho "Singularity bindpath is $(echo "${SINGULARITY_BINDPATH}" | tr , '\n')"
    #mkdir -p "/opt/nesi/vdt/logs/$USER"

    
    rm -f "/tmp/.X11-unix/X${display_port}"
    rm  -f "/tmp/.X${display_port}"
    rm -f $HOME/.ICEauthority
    # This way the same singularity container is always used.--pid-file "/opt/nesi/vdt/logs/${USER}/${HOSTNAME}:${display_port}.pids"--pid-file "/opt/nesi/vdt/logs/${USER}/${HOSTNAME}:${display_port}.pid" 
    singularity ${V} instance start $nohome --cleanenv "$(readlink -f "$root/$desktop/image")" "${instance_name}" ":$display_port"
    #singularity ${V} exec "instance://${instance_name}" vncserver -kill ":$display_port"; vncserver -wm startxfce4 -geometry 1920x1080 -securitytypes TLSNone,X509None,None ":$display_port"
    #singularity ${V} exec "instance://${instance_name}" vncserver -xstartup /opt/nesi/vdt/xstartup_nesi  -securitytypes TLSNone,X509None,None ":$display_port"
    # -xstartup /opt/nesi/vdt/xstartup_nesi 
    # -wm xfce4-session
}

vecho () {
    # For verbose print.
    if [[ $VERBOSE ]]; then
        echo "$@"
    fi
}

main() {
    parse_input "$@"
    set_env
    create_vnc
    vecho "'start_vdt' exiting"
    return 0
}

main "$@"

